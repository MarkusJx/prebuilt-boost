name: Build Boost

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Boost version to build'
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-18.04', 'windows-2016', 'windows-2019', 'macos-10.15', 'macos-11']

    runs-on: ${{matrix.os}}
    steps:
      - name: git clone
        run: git clone https://github.com/boostorg/boost
      - name: git checkout
        run: git checkout tags/boost-${{github.event.inputs.version}}
        working-directory: boost
      - name: git submodule init
        run: git submodule update --init --recursive
        working-directory: boost
      
      # Build steps
      - name: Bootstrap windows
        if: runner.os == 'Windows'
        run: .\bootstrap.bat
        working-directory: boost
      - name: Bootstrap unix
        if: runner.os != 'Windows'
        run: ./bootstrap.sh
        working-directory: boost
      - name: Build windows
        if: runner.os == 'Windows'
        run: .\b2.exe install --build-dir='tmp' --prefix='.' link='static,shared' runtime-link='static,shared' variant='debug,release' -j2
        working-directory: boost
      - name: Build debug unix
        if: runner.os != 'Windows'
        run: ./b2 --build-dir='tmp' --prefix='.' --layout='tagged' link='static,shared' runtime-link='static,shared' variant='debug' -j2
        working-directory: boost
      - name: Build release unix
        if: runner.os != 'Windows'
        run: ./b2 --build-dir='tmp' --prefix='.' --layout='tagged' link='static,shared' runtime-link='static,shared' variant='release' -j2
        working-directory: boost
      
      # Upload steps
      - name: Cleanup windows
        run: RD /S /Q .git tmp
        if: runner.os == 'Windows'
        shell: cmd
        working-directory: boost
      - name: Cleanup unix
        run: rm -rf .git tmp
        if: runner.os != 'Windows'
        working-directory: boost
      - name: Compress files
        run: tar -czf boost-${{github.event.inputs.version}}-${{matrix.os}}.tar.gz boost
      - name: Upload boost artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          retention-days: 1
          name: boost-${{matrix.os}}
          path: "boost-*.tar.gz"

  upload:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download all Artifacts
        uses: actions/download-artifact@v2.0.10
      - name: Move artifacts
        shell: bash
        run: |
          mv */* .
          find . -type d -empty -delete
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          tag: ${{github.event.inputs.version}}
          artifacts: "boost-*"
          token: ${{ secrets.GITHUB_TOKEN }}
