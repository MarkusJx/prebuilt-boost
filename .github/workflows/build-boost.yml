name: Build Boost

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Boost version to build'
        required: true
      release:
        description: 'Release'
        type: boolean
        required: false
        default: true
      delete-previous:
        description: 'Delete previous release'
        type: boolean
        required: false
        default: true

jobs:
  build:
    strategy:
      matrix:
        include:
          # Ubuntu
          - os: ubuntu-20.04
            COMPILER: gcc
            LINK: 'static+shared'
            ARCH: x86
          - os: ubuntu-20.04
            COMPILER: gcc
            LINK: 'static+shared'
            ARCH: aarch64
          - os: ubuntu-22.04
            COMPILER: gcc
            LINK: 'static+shared'
            ARCH: x86
          # Windows Server 2019
          - os: windows-2019
            COMPILER: msvc
            LINK: 'static'
            ARCH: x86
          - os: windows-2019
            COMPILER: msvc
            LINK: 'shared'
            ARCH: x86
          # Windows Server 2022
          - os: windows-2022
            COMPILER: msvc
            LINK: 'static'
            ARCH: x86
          - os: windows-2022
            COMPILER: msvc
            LINK: 'shared'
            ARCH: x86
          # MacOS
          - os: macos-12
            COMPILER: clang
            LINK: 'static+shared'
            ARCH: x86
          - os: macos-13
            COMPILER: clang
            LINK: 'static+shared'
            ARCH: x86
          - os: macos-14
            COMPILER: clang
            LINK: 'static+shared'
            ARCH: aarch64

    runs-on: ${{ matrix.os }}
    steps:
      - name: git clone
        run: git clone https://github.com/boostorg/boost

      - name: git checkout
        run: git checkout tags/boost-${{ github.event.inputs.version }}
        working-directory: boost

      - name: git submodule init
        run: git submodule update --init --recursive
        working-directory: boost

      - name: Delete .git windows
        run: RD /S /Q .git
        if: runner.os == 'Windows'
        shell: cmd
        working-directory: boost

      - name: Delete .git unix
        run: rm -rf .git
        if: runner.os != 'Windows'
        working-directory: boost

      - name: Setup VS Dev Environment
        uses: seanmiddleditch/gha-setup-vsdevenv@master
        if: ${{ runner.os == 'Windows' && matrix.COMPILER == 'msvc' }}

      - name: Install ARM Toolchain
        if: ${{ runner.os == 'Linux' && matrix.ARCH == 'aarch64' }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y

      - name: Setup Python 3.7
        uses: actions/setup-python@v5
        if: ${{ (runner.os != 'Windows' || matrix.COMPILER != 'msvc' || matrix.LINK != 'shared') && matrix.os != 'macos-14' }}
        with:
          python-version: '3.7'

      - name: Add Python 3.7 to user-config
        working-directory: boost/tools/build/src
        if: ${{ (runner.os != 'Windows' || matrix.COMPILER != 'msvc' || matrix.LINK != 'shared') && matrix.os != 'macos-14' }}
        shell: bash
        run: |
          VAR="using python : 3.7 : $Python_ROOT_DIR ;"
          echo ${VAR//\\/\/} >> user-config.jam

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        if: ${{ (runner.os != 'Windows' || matrix.COMPILER != 'msvc' || matrix.LINK != 'shared') && matrix.os != 'macos-14' }}
        with:
          python-version: '3.8'

      - name: Add Python 3.8 to user-config
        working-directory: boost/tools/build/src
        if: ${{ (runner.os != 'Windows' || matrix.COMPILER != 'msvc' || matrix.LINK != 'shared') && matrix.os != 'macos-14' }}
        shell: bash
        run: |
          VAR="using python : 3.8 : $Python_ROOT_DIR ;"
          echo ${VAR//\\/\/} >> user-config.jam

      - name: Bootstrap windows
        if: ${{ runner.os == 'Windows' && matrix.COMPILER == 'msvc' }}
        run: .\bootstrap.bat msvc
        working-directory: boost

      - name: Bootstrap unix
        if: runner.os != 'Windows'
        run: ./bootstrap.sh
        working-directory: boost

      - name: Build windows msvc (static)
        if: ${{ runner.os == 'Windows' && matrix.COMPILER == 'msvc' && matrix.LINK == 'static' }}
        run: .\b2.exe install --build-dir='tmp' --prefix='.' variant='release,debug' address-model='32,64' link=${{ matrix.LINK }} python='3.7,3.8,3.9,3.10,3.11,3.12' -j4 msvc stage
        working-directory: boost

      - name: Compress files
        run: tar -czf boost-${{ github.event.inputs.version }}-${{ matrix.os }}-${{ matrix.COMPILER }}-${{ matrix.LINK }}-${{ matrix.ARCH }}.tar.gz boost

      - name: Upload boost artifact
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: boost-${{ matrix.os }}-${{ matrix.COMPILER }}-${{ matrix.LINK }}-${{ matrix.ARCH }}
          path: "boost-*.tar.gz"

  upload:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event.inputs.release == 'true'
    steps:
      - name: Delete previous release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        if: github.event.inputs.delete-previous == 'true'
        with:
          tag_name: ${{ github.event.inputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all Artifacts
        uses: actions/download-artifact@v4

      - name: Move artifacts
        shell: bash
        run: |
          mv */* .
          find . -type d -empty -delete

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          tag: ${{ github.event.inputs.version }}
          artifacts: "boost-*"
          token: ${{ secrets.GITHUB_TOKEN }}

  update-manifest:
    runs-on: ubuntu-latest
    needs: [upload]
    if: github.event.inputs.release == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci
        working-directory: manifest-creator

      - name: Update manifest
        run: npm start
        working-directory: manifest-creator

      - name: Commit manifest
        uses: EndBug/add-and-commit@v9
        with:
          add: versions-manifest.json
          message: 'chore: update versions-manifest'
